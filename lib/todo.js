// Generated by CoffeeScript 1.6.2
var Today, Todo, colors, fs, moment, path;

moment = require('moment');

colors = require('colors');

path = require('path');

fs = require('fs');

Today = moment();

Todo = (function() {
  Todo.all = [];

  Todo.file = path.join(__dirname, '..', 'data', 'todos.json');

  Todo.show = function() {
    var todo, _i, _len, _ref;

    this.all.sort(function(a, b) {
      if (a.type === b.type) {
        return a.name > b.name;
      }
      return a.type > b.type;
    });
    console.log();
    _ref = this.all;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      todo = _ref[_i];
      console.log("\t" + todo);
    }
    if (this.all.length < 1) {
      console.log("nothing to do".grey);
    }
    return console.log();
  };

  Todo.remove = function(options) {
    var index, todo, _results;

    index = 0;
    _results = [];
    while (index < this.all.length) {
      todo = this.all[index];
      if ((options.name && todo.name.match(new RegExp(options.name, 'i'))) || (options.date && todo.date.format("DD/MM/YYYY").match(options.date)) || (options.done && todo.done)) {
        delete this.all[index];
        this.all.splice(index, 1);
        index--;
      }
      _results.push(index++);
    }
    return _results;
  };

  Todo.done = function(options) {
    var _this = this;

    return this.all.forEach(function(todo) {
      if ((options.name && todo.name.match(new RegExp(options.name, 'i'))) || (options.date && todo.date.format("DD/MM/YYYY").match(options.date))) {
        return todo.done = true;
      }
    });
  };

  Todo.save = function() {
    return fs.writeFile(this.file, JSON.stringify(this.all.map(function(e) {
      return e.toJSON();
    })), function(err) {
      if (err) {
        throw err;
      }
    });
  };

  Todo.load = function(callback) {
    return fs.readFile(this.file, function(err, data) {
      var list, todo, _i, _len;

      if (!err) {
        list = JSON.parse(data);
        for (_i = 0, _len = list.length; _i < _len; _i++) {
          todo = list[_i];
          new Todo(todo);
        }
      }
      return callback();
    });
  };

  function Todo(options) {
    var _ref;

    if (options == null) {
      options = {};
    }
    this.type = options.type;
    if (this.type) {
      this.name = options.name;
    } else {
      _ref = options.name.split(':'), this.type = _ref[0], this.name = _ref[1];
      if (!this.name) {
        this.name = this.type;
        delete this.type;
      }
    }
    this.name = this.name.trim();
    if (options.date) {
      this.date = moment(options.date, "DD-MM-YYYY");
    }
    this.done = options.done || false;
    Todo.all.push(this);
  }

  Todo.prototype.toString = function() {
    var str, symbol;

    str = this.name;
    str = (this.type ? "" + this.type + ": " : "") + str;
    symbol = (this.done ? "✓ ".green : "✖ ".red);
    if (this.date) {
      str += " - " + (this.date.format("DD/MM/YYYY"));
    }
    if (this.done) {
      return symbol + str.strike.green;
    }
    if (this.date) {
      if (this.date.date() < Today.date()) {
        return symbol + str.bold.red;
      }
      if (this.date.date() === Today.date()) {
        return symbol + str.bold.yellow;
      }
    }
    return symbol + str;
  };

  Todo.prototype.toJSON = function() {
    return {
      type: this.type,
      name: this.name,
      date: (this.date ? this.date.format("DD/MM/YYYY") : void 0),
      done: this.done
    };
  };

  return Todo;

})();

module.exports = Todo;
